name: Build & Deploy Jekyll site

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create and run update-index script
        run: |
          mkdir -p scripts
          cat > scripts/update-index.js << 'EOL'
          const fs = require('fs');
          const path = require('path');

          // Путь к папке с отчетами
          const reportsDir = path.join(__dirname, '..', 'reports');

          // Проверяем существование папки
          if (!fs.existsSync(reportsDir)) {
            fs.mkdirSync(reportsDir, { recursive: true });
            console.log("Created reports directory");
          }

          // Получаем список HTML-файлов
          const files = fs.readdirSync(reportsDir)
            .filter(file => file.endsWith(".html"))
            .map(name => ({
              name,
              date: fs.statSync(path.join(reportsDir, name)).mtime.toISOString()
            }))
            .sort((a, b) => new Date(b.date) - new Date(a.date));

          // Создаем index.json
          fs.writeFileSync(
            path.join(reportsDir, "index.json"),
            JSON.stringify(files, null, 2)
          );

          console.log(`Created index.json with ${files.length} reports`);
          EOL

          node scripts/update-index.js

      - name: Prepare _site and cache dirs
        run: |
          mkdir -p _site .jekyll-cache
          chmod -R 777 _site .jekyll-cache

      - name: Build site with Jekyll (Docker)
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/srv/jekyll \
            -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
            -v ${{ github.workspace }}/.jekyll-cache:/srv/jekyll/.jekyll-cache \
            jekyll/jekyll:4 \
            jekyll build \
              --destination /srv/jekyll/_site \
              --future

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          publish_branch: gh-pages
          allow_empty_commit: true
